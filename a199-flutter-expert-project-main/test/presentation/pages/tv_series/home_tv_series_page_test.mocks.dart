// Mocks generated by Mockito 5.4.4 from annotations
// in ditonton/test/presentation/pages/tv_series/home_tv_series_page_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i9;
import 'dart:ui' as _i10;

import 'package:ditonton/common/state_enum.dart' as _i7;
import 'package:ditonton/domain/entities/tv_series.dart' as _i6;
import 'package:ditonton/domain/usecases/get_tv_series_airing_today.dart'
    as _i2;
import 'package:ditonton/domain/usecases/get_tv_series_popular.dart' as _i3;
import 'package:ditonton/domain/usecases/get_tv_series_top_rated.dart' as _i4;
import 'package:ditonton/presentation/provider/tv_series_airing_today_notifier.dart'
    as _i5;
import 'package:ditonton/presentation/provider/tv_series_popular_notifier.dart'
    as _i11;
import 'package:ditonton/presentation/provider/tv_series_top_rated_notifier.dart'
    as _i12;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i8;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeGetTvSeriesAiringToday_0 extends _i1.SmartFake
    implements _i2.GetTvSeriesAiringToday {
  _FakeGetTvSeriesAiringToday_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeGetTvSeriesPopular_1 extends _i1.SmartFake
    implements _i3.GetTvSeriesPopular {
  _FakeGetTvSeriesPopular_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeGetTvSeriesTopRated_2 extends _i1.SmartFake
    implements _i4.GetTvSeriesTopRated {
  _FakeGetTvSeriesTopRated_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [TvSeriesAiringTodayNotifier].
///
/// See the documentation for Mockito's code generation for more information.
class MockTvSeriesAiringTodayNotifier extends _i1.Mock
    implements _i5.TvSeriesAiringTodayNotifier {
  MockTvSeriesAiringTodayNotifier() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.GetTvSeriesAiringToday get getTvSeriesAiringTodayUseCase =>
      (super.noSuchMethod(
        Invocation.getter(#getTvSeriesAiringTodayUseCase),
        returnValue: _FakeGetTvSeriesAiringToday_0(
          this,
          Invocation.getter(#getTvSeriesAiringTodayUseCase),
        ),
      ) as _i2.GetTvSeriesAiringToday);

  @override
  List<_i6.TvSeries> get tvSeriesList => (super.noSuchMethod(
        Invocation.getter(#tvSeriesList),
        returnValue: <_i6.TvSeries>[],
      ) as List<_i6.TvSeries>);

  @override
  _i7.RequestState get airingTodayState => (super.noSuchMethod(
        Invocation.getter(#airingTodayState),
        returnValue: _i7.RequestState.Empty,
      ) as _i7.RequestState);

  @override
  String get message => (super.noSuchMethod(
        Invocation.getter(#message),
        returnValue: _i8.dummyValue<String>(
          this,
          Invocation.getter(#message),
        ),
      ) as String);

  @override
  bool get hasListeners => (super.noSuchMethod(
        Invocation.getter(#hasListeners),
        returnValue: false,
      ) as bool);

  @override
  _i9.Future<void> fetchAiringToday() => (super.noSuchMethod(
        Invocation.method(
          #fetchAiringToday,
          [],
        ),
        returnValue: _i9.Future<void>.value(),
        returnValueForMissingStub: _i9.Future<void>.value(),
      ) as _i9.Future<void>);

  @override
  void addListener(_i10.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #addListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void removeListener(_i10.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #removeListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void dispose() => super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void notifyListeners() => super.noSuchMethod(
        Invocation.method(
          #notifyListeners,
          [],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [TvSeriesPopularNotifier].
///
/// See the documentation for Mockito's code generation for more information.
class MockTvSeriesPopularNotifier extends _i1.Mock
    implements _i11.TvSeriesPopularNotifier {
  MockTvSeriesPopularNotifier() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.GetTvSeriesPopular get getTvSeriesPopularUseCase => (super.noSuchMethod(
        Invocation.getter(#getTvSeriesPopularUseCase),
        returnValue: _FakeGetTvSeriesPopular_1(
          this,
          Invocation.getter(#getTvSeriesPopularUseCase),
        ),
      ) as _i3.GetTvSeriesPopular);

  @override
  List<_i6.TvSeries> get tvSeriesList => (super.noSuchMethod(
        Invocation.getter(#tvSeriesList),
        returnValue: <_i6.TvSeries>[],
      ) as List<_i6.TvSeries>);

  @override
  _i7.RequestState get popularState => (super.noSuchMethod(
        Invocation.getter(#popularState),
        returnValue: _i7.RequestState.Empty,
      ) as _i7.RequestState);

  @override
  String get message => (super.noSuchMethod(
        Invocation.getter(#message),
        returnValue: _i8.dummyValue<String>(
          this,
          Invocation.getter(#message),
        ),
      ) as String);

  @override
  bool get hasListeners => (super.noSuchMethod(
        Invocation.getter(#hasListeners),
        returnValue: false,
      ) as bool);

  @override
  _i9.Future<void> fetchPopular() => (super.noSuchMethod(
        Invocation.method(
          #fetchPopular,
          [],
        ),
        returnValue: _i9.Future<void>.value(),
        returnValueForMissingStub: _i9.Future<void>.value(),
      ) as _i9.Future<void>);

  @override
  void addListener(_i10.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #addListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void removeListener(_i10.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #removeListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void dispose() => super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void notifyListeners() => super.noSuchMethod(
        Invocation.method(
          #notifyListeners,
          [],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [TvSeriesTopRatedNotifier].
///
/// See the documentation for Mockito's code generation for more information.
class MockTvSeriesTopRatedNotifier extends _i1.Mock
    implements _i12.TvSeriesTopRatedNotifier {
  MockTvSeriesTopRatedNotifier() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.GetTvSeriesTopRated get getTvSeriesTopRatedUseCase => (super.noSuchMethod(
        Invocation.getter(#getTvSeriesTopRatedUseCase),
        returnValue: _FakeGetTvSeriesTopRated_2(
          this,
          Invocation.getter(#getTvSeriesTopRatedUseCase),
        ),
      ) as _i4.GetTvSeriesTopRated);

  @override
  List<_i6.TvSeries> get tvSeriesList => (super.noSuchMethod(
        Invocation.getter(#tvSeriesList),
        returnValue: <_i6.TvSeries>[],
      ) as List<_i6.TvSeries>);

  @override
  _i7.RequestState get topRatedState => (super.noSuchMethod(
        Invocation.getter(#topRatedState),
        returnValue: _i7.RequestState.Empty,
      ) as _i7.RequestState);

  @override
  String get message => (super.noSuchMethod(
        Invocation.getter(#message),
        returnValue: _i8.dummyValue<String>(
          this,
          Invocation.getter(#message),
        ),
      ) as String);

  @override
  bool get hasListeners => (super.noSuchMethod(
        Invocation.getter(#hasListeners),
        returnValue: false,
      ) as bool);

  @override
  _i9.Future<void> fetchTopRated() => (super.noSuchMethod(
        Invocation.method(
          #fetchTopRated,
          [],
        ),
        returnValue: _i9.Future<void>.value(),
        returnValueForMissingStub: _i9.Future<void>.value(),
      ) as _i9.Future<void>);

  @override
  void addListener(_i10.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #addListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void removeListener(_i10.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #removeListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void dispose() => super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void notifyListeners() => super.noSuchMethod(
        Invocation.method(
          #notifyListeners,
          [],
        ),
        returnValueForMissingStub: null,
      );
}
